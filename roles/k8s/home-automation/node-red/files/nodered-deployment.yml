---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
  namespace: node-red
  labels:
    app.kubernetes.io/instance: node-red
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: node-red
    app.kubernetes.io/version: 2.1.4
    helm.sh/chart: node-red-10.0.0
  annotations:
    meta.helm.sh/release-name: node-red
    meta.helm.sh/release-namespace: node-red
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: node-red
      app.kubernetes.io/name: node-red
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: node-red
        app.kubernetes.io/name: node-red
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: node-red-config
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command:
            - sh
            - '-c'
            - chmod 777 /data
          resources: {}
          volumeMounts:
            - name: config
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      containers:
        - name: node-red
          image: nodered/node-red:2.1.4
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          env:
            - name: FLOWS
              value: flows.json
            - name: NODE_OPTIONS
            - name: NODE_RED_ENABLE_PROJECTS
            - name: NODE_RED_ENABLE_SAFE_MODE
            - name: TZ
              value: Europe/Zurich
          resources: {}
          volumeMounts:
            - name: config
              mountPath: /data
          livenessProbe:
            tcpSocket:
              port: 1880
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 1880
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 1880
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      automountServiceAccountToken: true
      securityContext: {}
      schedulerName: default-scheduler
      enableServiceLinks: true
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
